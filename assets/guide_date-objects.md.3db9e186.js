import{_ as e,c as a,o as t,d as o}from"./app.26bb0c60.js";const m=JSON.parse('{"title":"Date objects","description":"","frontmatter":{},"headers":[],"relativePath":"guide/date-objects.md","lastUpdated":1667491179000}'),r={name:"guide/date-objects.md"},c=o('<h1 id="date-objects" tabindex="-1">Date objects <a class="header-anchor" href="#date-objects" aria-hidden="true">#</a></h1><p>In any instance where a ts-dax function requires a date as a parameter, you can choose to supply:</p><ul><li>a <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date" target="_blank" rel="noreferrer"><code>Date</code></a> object,</li><li>a <code>string</code>,</li><li>or a <code>number</code>.</li></ul><p>If you supply a <code>string</code> or a <code>number</code>, it will be passed to a <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/Date" target="_blank" rel="noreferrer"><code>new Date()</code></a>. This means that you can supply a date/timestamp string, or an integer representing the number of milliseconds since January 1, 1970.</p><div class="info custom-block"><p class="custom-block-title">INFO</p><p>See the <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/Date#parameters" target="_blank" rel="noreferrer">JavaScript documentation</a> on <code>Date()</code> constructor parameters for more details!</p></div>',5),s=[c];function n(d,i,l,p,_,b){return t(),a("div",null,s)}const h=e(r,[["render",n]]);export{m as __pageData,h as default};
